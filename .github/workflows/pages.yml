## Sample workflow for building and deploying a Jekyll site to GitHub Pages
#name: Deploy blog.9mac.me on GitHub by cryogen
#
#on:
#  # Runs on pushes targeting the default branch
#  push:
#    branches: ["main"]
#
#  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:
#
## Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
#permissions:
#  contents: read
#  pages: write
#  id-token: write
#
## Allow one concurrent deployment
#concurrency:
#  group: "pages"
#  cancel-in-progress: true
#
#jobs:
#  # Build job
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Setup Pages
#        uses: actions/configure-pages@v2
#
#      - name: Prepare java
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: '17'
#
#      - name: Install clojure tools
#        uses: DeLaGuardo/setup-clojure@9.4
#        with:
#          # Install just one or all simultaneously
#          # The value must indicate a particular version of the tool, or use 'latest'
#          # to always provision the latest version
#          cli: 1.10.1.693              # Clojure CLI based on tools.deps
#          lein: 2.9.10                  # Leiningen
#          #boot: 2.8.3                  # Boot.clj
#          #bb: 0.7.8                    # Babashka
#          #clj-kondo: 2022.05.31        # Clj-kondo
#          #cljstyle: 0.15.0             # cljstyle
#          #cmd-exe-workaround: 'latest' # Replaces `clojure` with `deps.clj` on Windows
#          #zprint: 1.2.3                # zprint
#
#      # Optional step:
#      - name: Cache clojure dependencies
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.m2/repository
#            ~/.gitlibs
#            ~/.deps.clj
#          # List all files containing dependencies:
#          key: cljdeps-${{ hashFiles('deps.edn') }}
#          # key: cljdeps-${{ hashFiles('deps.edn', 'bb.edn') }}
#          # key: cljdeps-${{ hashFiles('project.clj') }}
#          # key: cljdeps-${{ hashFiles('build.boot') }}
#          restore-keys: cljdeps-
#
#      #- name: Execute clojure code
#      #  run: clojure -e "(+ 1 1)"
#
#      #- name: Get leiningen version
#      #  run: lein -v
#
#      - name: generate pages
#        run: lein run
#
#      - name: Upload artifact
#        uses: actions/upload-pages-artifact@v1
#
#  # Deployment job
#  deploy:
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Deploy to GitHub Pages
#        id: deployment
#        uses: actions/deploy-pages@v1
